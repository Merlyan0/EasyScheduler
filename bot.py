# –ø—Ä–æ—á–µ–µ
from pprint import pprint

# VK API
import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType

# —Ä–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
from data.scripts.db import create_connection

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
from data.scripts.handler import BotHandler

# –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
from config import *


# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–∏—Å–∞–º API –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
vk_session = vk_api.VkApi(token=TOKEN)
vk = vk_session.get_api()
longpoll = VkBotLongPoll(vk_session, GROUP_ID)

# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
__temp = create_connection()
db_conn = __temp[0]
db_cur = __temp[1]

# —ç–∫–∑–µ–º–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥
handler = BotHandler(vk, db_conn, db_cur)

# –≤—Å–µ –ø—Ä–∏—Ö–æ–¥—è—â–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ —Å–æ–±—ã—Ç–∏—è
for event in longpoll.listen():

    # –ø—Ä–∏—à–ª–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if event.type == VkBotEventType.MESSAGE_NEW:
        pprint(event.object)

        message = event.object.message["text"].lower()  # –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

        # –∫–æ–º–∞–Ω–¥–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        if message == '–≥–ª–∞–≤–Ω–∞—è' or message == 'üîô –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            handler.main_menu(event.object.message["peer_id"])

        elif message == '‚öô –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' or message == '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏':
            handler.settings(event.object.message["peer_id"])

        elif message == 'üìù —Å–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ' or message == '—Å–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ' or message == '—Å–æ–∑–¥–∞—Ç—å':
            handler.create_reminder(event.object.message["peer_id"])

        elif message == '–Ω–∞—á–∞—Ç—å':
            handler.start(event.object.message["peer_id"])

        else:
            if not handler.create_manually(event):

                handler.reminder_analyzer(event)

    elif event.type == VkBotEventType.MESSAGE_EVENT:

        print(event.object)

        if event.object.payload.get("type") == "confirm":
            handler.confirm_info(event)
